/* Copyright Istio Authors. All Rights Reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

syntax = "proto3";

package io.istio.http.peer_metadata;

// Peer metadata provider filter. This filter encapsulates the discovery of the
// peer telemetry attributes for consumption by the telemetry filters.
// Peer metadata provider filter，这个filter封装了peer telemetry attributes的discovery，被telemery消费
message Config {
  // DEPRECATED.
  // This method uses `baggage` header encoding.
  // 这个方法使用`baggage` header encoding
  message Baggage {
  }

  // This method uses the workload metadata xDS. Requires that the bootstrap extension is enabled.
  // For downstream discovery, the remote address is the lookup key in xDS.
  // 这个方法使用workload metadata xDS，需要使能bootstrap extension，对于downstream discovery，remote address是xDS lookup key
  // For upstream discovery:
  // 对于upstream discovery：
  //
  // * If the upstream host address is an IP, this IP is used as the lookup key;
  // * 如果upstream host address是一个IP，则这个IP作为lookup key
  //
  // * If the upstream host address is internal, uses the
  // "filter_metadata.tunnel.destination" dynamic metadata value as the lookup key.
  // * 如果upstream host addresss是internal，使用"filter_metadata.tunnel.destination" dynamic metadata作为lookup key
  message WorkloadDiscovery {
  }

  // This method uses Istio HTTP metadata exchange headers, e.g. `x-envoy-peer-metadata`. Removes these headers if found.
  // 这个方法使用Istio HTTP metadata exchange headers，例如，`x-envoy-peer-metadata`，移除这些Headers，如果找到的话
  message IstioHeaders {
    // Strip x-envoy-peer-metadata and x-envoy-peer-metadata-id headers on HTTP requests to services outside the mesh.
    // Detects upstream clusters with `istio` and `external` filter metadata fields
    // 对于网格外的services，移除HTTP请求中的x-envoy-peer-metadata和x-envoy-peer-metadata-id
    // 用`istio`和`external` filter metadata字段检测upstream clusters
    bool skip_external_clusters = 1;
  }

  // An exhaustive list of the derivation methods.
  message DiscoveryMethod {
    oneof method_specifier {
      Baggage baggage = 1;
      WorkloadDiscovery workload_discovery = 2;
      IstioHeaders istio_headers = 3;
    }
  }

  // The order of the derivation of the downstream peer metadata, in the precedence order.
  // First successful lookup wins.
  repeated DiscoveryMethod downstream_discovery = 1;

  // The order of the derivation of the upstream peer metadata, in the precedence order.
  // First successful lookup wins.
  repeated DiscoveryMethod upstream_discovery = 2;

  // An exhaustive list of the metadata propagation methods.
  message PropagationMethod {
    oneof method_specifier {
      IstioHeaders istio_headers = 1;
    }
  }

  // Downstream injection of the metadata via a response header.
  repeated PropagationMethod downstream_propagation = 3;

  // Upstream injection of the metadata via a request header.
  repeated PropagationMethod upstream_propagation = 4;

  // True to enable sharing with the upstream.
  bool shared_with_upstream = 5;
}
